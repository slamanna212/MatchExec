name: Create Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'docs/**'

jobs:
  release:
    if: "!contains(github.event.head_commit.message, '[skip release]')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        
    - name: Get package version
      id: package_version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Check if tag exists
      id: check_tag
      run: |
        if git rev-parse "v${{ steps.package_version.outputs.version }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      if: steps.check_tag.outputs.exists == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package_version.outputs.version }}
        release_name: Release v${{ steps.package_version.outputs.version }}
        body: |
          ## üêõ Bug Fixes
          
          ## ‚ú® New Features

          ## üéÆ Game Data
          
          **Docker Image:** `ghcr.io/${{ github.repository_owner }}/matchexec:v${{ steps.package_version.outputs.version }}`
        draft: true
        prerelease: false
        
    - name: Log in to GitHub Container Registry
      if: steps.check_tag.outputs.exists == 'false'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push production Docker image
      if: steps.check_tag.outputs.exists == 'false'
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/matchexec:v${{ steps.package_version.outputs.version }}
          ghcr.io/${{ github.repository_owner }}/matchexec:latest